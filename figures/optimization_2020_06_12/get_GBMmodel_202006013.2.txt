*********************************************
* Reading training and optimization input files ...
Loading required package: gbm
Loaded gbm 2.1.5
*********************************************
* Training model for layer 5
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.995823e+01
x_1 x_1 1.871181e-02
y_4 y_4 4.297240e-03
z_4 z_4 3.586608e-03
y_1 y_1 3.560856e-03
x_2 x_2 2.078518e-03
x_3 x_3 1.975323e-03
z_3 z_3 1.969536e-03
z_1 z_1 1.704125e-03
z_2 z_2 1.524679e-03
y_2 y_2 1.409619e-03
y_3 y_3 9.541205e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 2.96409  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.995581e+01
y_1 y_1 1.899706e-02
y_3 y_3 6.618173e-03
x_4 x_4 4.225121e-03
z_4 z_4 3.620755e-03
x_1 x_1 2.895560e-03
y_2 y_2 2.229779e-03
z_3 z_3 1.454297e-03
z_1 z_1 1.333551e-03
z_2 z_2 1.022806e-03
x_2 x_2 9.542085e-04
x_3 x_3 8.398175e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 2.272901  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.987804e+01
z_1 z_1 1.048270e-01
x_1 x_1 4.593489e-03
z_3 z_3 2.872056e-03
z_2 z_2 1.913563e-03
y_1 y_1 1.595817e-03
y_4 y_4 1.328963e-03
x_4 x_4 1.158561e-03
y_3 y_3 1.073571e-03
y_2 y_2 9.588511e-04
x_3 x_3 8.204186e-04
x_2 x_2 8.190296e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 3.027105  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 6
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 99.855308381
x_3 x_3  0.048411178
x_1 x_1  0.042171115
x_2 x_2  0.017472017
y_4 y_4  0.009141862
z_1 z_1  0.007209023
y_1 y_1  0.007194866
z_3 z_3  0.005054234
y_3 y_3  0.003689176
z_4 z_4  0.001705878
y_2 y_2  0.001340135
z_2 z_2  0.001302136
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 7.912286  mm^2 | 480 trees | tree position = 24 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 99.930212362
y_1 y_1  0.026631998
y_3 y_3  0.018522383
x_4 x_4  0.009506440
x_1 x_1  0.004478162
y_2 y_2  0.002482411
z_3 z_3  0.001671147
z_4 z_4  0.001645276
x_3 x_3  0.001323070
z_1 z_1  0.001319254
x_2 x_2  0.001120031
z_2 z_2  0.001087465
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 3.677467  mm^2 | 980 trees | tree position = 49 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.862997416
x_4 x_4  0.069697367
z_1 z_1  0.033986438
z_3 z_3  0.007726364
x_3 x_3  0.005543584
x_2 x_2  0.004526044
y_4 y_4  0.003402492
z_2 z_2  0.003059583
x_1 x_1  0.002838586
y_1 y_1  0.002815776
y_3 y_3  0.001984221
y_2 y_2  0.001422132
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 2.229234  mm^2 | 720 trees | tree position = 36 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 7
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.992547e+01
x_1 x_1 5.938958e-02
y_4 y_4 4.486040e-03
y_1 y_1 1.964728e-03
x_2 x_2 1.734910e-03
y_3 y_3 1.658950e-03
z_4 z_4 1.303257e-03
x_3 x_3 9.935294e-04
z_2 z_2 8.911046e-04
z_1 z_1 8.542145e-04
z_3 z_3 6.329803e-04
y_2 y_2 6.158840e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 8.994858  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.992403e+01
y_1 y_1 6.013084e-02
x_4 x_4 4.731821e-03
x_1 x_1 2.248038e-03
y_3 y_3 1.892381e-03
z_4 z_4 1.439597e-03
y_2 y_2 1.061982e-03
z_1 z_1 1.057638e-03
z_2 z_2 1.022133e-03
x_3 x_3 9.557739e-04
x_2 x_2 7.147574e-04
z_3 z_3 7.145578e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 6.884621  mm^2 | 980 trees | tree position = 49 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.994816e+01
z_3 z_3 2.406285e-02
z_1 z_1 1.606328e-02
x_3 x_3 2.501670e-03
y_3 y_3 2.060544e-03
z_2 z_2 1.786551e-03
y_4 y_4 1.116953e-03
y_1 y_1 1.037639e-03
x_4 x_4 9.864867e-04
x_1 x_1 9.597863e-04
y_2 y_2 6.644589e-04
x_2 x_2 5.960330e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 2.710272  mm^2 | 980 trees | tree position = 49 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 8
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.953578e+01
x_1 x_1 1.692273e-01
x_3 x_3 9.265690e-02
x_2 x_2 5.844773e-02
y_1 y_1 5.757137e-02
y_4 y_4 4.225517e-02
y_3 y_3 2.523907e-02
y_2 y_2 1.681820e-02
z_1 z_1 1.026395e-03
z_4 z_4 6.022918e-04
z_2 z_2 2.097393e-04
z_3 z_3 1.623272e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 157.6723  mm^2 | 360 trees | tree position = 18 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.988625e+01
y_1 y_1 8.925838e-02
x_1 x_1 4.994475e-03
x_3 x_3 4.910810e-03
x_2 x_2 4.292278e-03
x_4 x_4 4.291474e-03
y_3 y_3 2.147964e-03
y_2 y_2 1.902037e-03
z_4 z_4 7.514248e-04
z_1 z_1 5.622546e-04
z_2 z_2 3.278144e-04
z_3 z_3 3.151568e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 67.06343  mm^2 | 700 trees | tree position = 35 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.996125e+01
z_3 z_3 1.569186e-02
z_1 z_1 6.786682e-03
x_3 x_3 3.031486e-03
x_2 x_2 2.555233e-03
x_1 x_1 2.161572e-03
x_4 x_4 2.137291e-03
y_1 y_1 1.784784e-03
y_2 y_2 1.748606e-03
y_4 y_4 1.266838e-03
z_2 z_2 8.080113e-04
y_3 y_3 7.802900e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 6.226375  mm^2 | 420 trees | tree position = 21 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 9
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.980028e+01
x_1 x_1 1.018910e-01
x_3 x_3 2.880867e-02
x_2 x_2 2.739859e-02
y_4 y_4 1.376361e-02
y_1 y_1 1.212961e-02
y_3 y_3 7.002200e-03
y_2 y_2 5.316398e-03
z_2 z_2 1.058613e-03
z_3 z_3 9.907167e-04
z_4 z_4 7.912272e-04
z_1 z_1 5.697014e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 37.02241  mm^2 | 620 trees | tree position = 31 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.987755e+01
y_1 y_1 9.567429e-02
x_4 x_4 9.659663e-03
x_2 x_2 5.087671e-03
x_1 x_1 3.409111e-03
x_3 x_3 2.514834e-03
y_2 y_2 2.120698e-03
y_3 y_3 1.979186e-03
z_1 z_1 5.882310e-04
z_4 z_4 5.486744e-04
z_3 z_3 4.653907e-04
z_2 z_2 4.059409e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 21.73268  mm^2 | 900 trees | tree position = 45 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.709466454
z_3 z_3  0.220364389
z_2 z_2  0.037543150
z_1 z_1  0.005066740
x_4 x_4  0.005044343
x_1 x_1  0.004109895
y_1 y_1  0.003792891
y_4 y_4  0.003566270
x_2 x_2  0.003088601
y_3 y_3  0.002970979
x_3 x_3  0.002824391
y_2 y_2  0.002161897
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 10.72879  mm^2 | 300 trees | tree position = 15 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 10
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.985295e+01
x_1 x_1 1.391913e-01
y_4 y_4 1.568805e-03
y_1 y_1 1.057969e-03
y_2 y_2 1.030548e-03
x_2 x_2 1.000702e-03
y_3 y_3 8.500717e-04
x_3 x_3 7.620132e-04
z_1 z_1 5.783768e-04
z_3 z_3 4.255591e-04
z_2 z_2 4.165261e-04
z_4 z_4 1.666743e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 30.40786  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.984051e+01
y_1 y_1 1.523029e-01
x_4 x_4 1.521143e-03
x_1 x_1 1.240265e-03
y_3 y_3 7.562705e-04
y_2 y_2 7.078641e-04
x_3 x_3 6.851029e-04
x_2 x_2 6.348085e-04
z_1 z_1 6.043256e-04
z_3 z_3 4.673864e-04
z_2 z_2 3.650301e-04
z_4 z_4 2.097932e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 36.51723  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_3 z_3 71.324443303
z_4 z_4 28.615719577
z_2 z_2  0.021126273
z_1 z_1  0.007804648
y_1 y_1  0.005295135
y_2 y_2  0.004694121
y_3 y_3  0.003950224
y_4 y_4  0.003914453
x_1 x_1  0.003721789
x_4 x_4  0.003442757
x_2 x_2  0.002973170
x_3 x_3  0.002914550
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 37.14901  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
* Done!
*********************************************

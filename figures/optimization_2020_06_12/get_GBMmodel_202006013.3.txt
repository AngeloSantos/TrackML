*********************************************
* Reading training and optimization input files ...
Loading required package: gbm
Loaded gbm 2.1.5
*********************************************
* Training model for layer 5
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 99.774070675
x_3 x_3  0.042184879
x_1 x_1  0.038872580
x_2 x_2  0.038209559
y_1 y_1  0.022943522
z_1 z_1  0.019557841
y_4 y_4  0.015811238
y_3 y_3  0.014030177
z_2 z_2  0.010330424
y_2 y_2  0.009036057
z_4 z_4  0.008663972
z_3 z_3  0.006289076
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 7.86819  mm^2 | 920 trees | tree position = 46 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.995876e+01
y_1 y_1 1.826567e-02
y_3 y_3 4.937960e-03
x_4 x_4 3.853891e-03
z_4 z_4 3.784359e-03
x_1 x_1 2.756575e-03
y_2 y_2 2.123794e-03
z_1 z_1 1.336774e-03
x_2 x_2 1.195491e-03
x_3 x_3 9.998187e-04
z_2 z_2 9.981823e-04
z_3 z_3 9.843811e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 2.377237  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.850370005
z_1 z_1  0.120788832
z_2 z_2  0.010074984
x_1 x_1  0.005068702
z_3 z_3  0.002857035
y_1 y_1  0.002489930
y_4 y_4  0.001710857
x_4 x_4  0.001488909
x_2 x_2  0.001480205
x_3 x_3  0.001244085
y_2 y_2  0.001217461
y_3 y_3  0.001208994
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 2.974581  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 6
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 99.938538875
x_1 x_1  0.026040436
x_3 x_3  0.015955157
y_4 y_4  0.005831788
y_1 y_1  0.003512852
x_2 x_2  0.002051471
z_4 z_4  0.001808874
z_3 z_3  0.001625596
y_2 y_2  0.001315559
z_1 z_1  0.001206562
z_2 z_2  0.001097093
y_3 y_3  0.001015738
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 4.779905  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.993535e+01
y_1 y_1 2.588619e-02
y_3 y_3 1.991393e-02
x_4 x_4 5.751964e-03
x_1 x_1 3.989021e-03
y_2 y_2 2.329940e-03
z_4 z_4 1.718216e-03
z_3 z_3 1.523545e-03
z_1 z_1 1.018366e-03
z_2 z_2 1.010453e-03
x_3 x_3 7.587064e-04
x_2 x_2 7.543959e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 3.591859  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.906598546
z_1 z_1  0.036206381
z_3 z_3  0.012927881
z_2 z_2  0.008031202
y_4 y_4  0.007245764
y_1 y_1  0.007216163
x_4 x_4  0.005328727
x_1 x_1  0.003735265
y_3 y_3  0.003427968
y_2 y_2  0.003385100
x_2 x_2  0.003206403
x_3 x_3  0.002690599
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 2.324115  mm^2 | 920 trees | tree position = 46 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 7
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.992575e+01
x_1 x_1 5.752802e-02
y_4 y_4 4.923296e-03
y_1 y_1 2.381192e-03
x_3 x_3 1.711059e-03
z_4 z_4 1.563218e-03
x_2 x_2 1.242774e-03
z_1 z_1 1.194716e-03
z_2 z_2 1.156001e-03
z_3 z_3 9.311494e-04
y_3 y_3 9.112755e-04
y_2 y_2 7.057681e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 8.872128  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.992740e+01
y_1 y_1 5.747867e-02
x_4 x_4 4.525131e-03
y_3 y_3 2.633996e-03
x_1 x_1 2.039829e-03
z_4 z_4 1.224834e-03
z_1 z_1 9.527709e-04
z_2 z_2 8.443202e-04
y_2 y_2 7.869013e-04
x_3 x_3 7.417166e-04
x_2 x_2 7.062585e-04
z_3 z_3 6.632914e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 6.489421  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.996749e+01
z_1 z_1 2.073935e-02
z_2 z_2 3.973609e-03
z_3 z_3 2.027371e-03
y_4 y_4 9.220978e-04
x_4 x_4 8.995408e-04
x_1 x_1 8.719719e-04
y_1 y_1 7.810136e-04
y_3 y_3 6.614461e-04
x_2 x_2 5.829631e-04
y_2 y_2 5.467831e-04
x_3 x_3 5.070555e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 2.61447  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 8
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.990840e+01
x_1 x_1 8.206006e-02
y_4 y_4 2.213218e-03
z_4 z_4 1.199893e-03
y_1 y_1 1.073097e-03
z_1 z_1 9.884746e-04
x_2 x_2 8.533226e-04
x_3 x_3 7.500808e-04
z_3 z_3 7.137703e-04
y_3 y_3 7.114316e-04
y_2 y_2 6.376167e-04
z_2 z_2 3.986885e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 94.63913  mm^2 | 960 trees | tree position = 48 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.991460e+01
y_1 y_1 7.566691e-02
x_4 x_4 2.450116e-03
x_1 x_1 1.122454e-03
z_1 z_1 1.055683e-03
z_4 z_4 9.921056e-04
y_2 y_2 8.864289e-04
y_3 y_3 8.234655e-04
x_3 x_3 7.397142e-04
x_2 x_2 6.463593e-04
z_2 z_2 5.198461e-04
z_3 z_3 4.982917e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 56.60245  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.995986e+01
z_3 z_3 2.572416e-02
z_1 z_1 7.626501e-03
z_2 z_2 2.172539e-03
y_4 y_4 8.727280e-04
x_1 x_1 6.802798e-04
x_4 x_4 6.681397e-04
y_1 y_1 6.645516e-04
y_3 y_3 4.805258e-04
x_3 x_3 4.242481e-04
y_2 y_2 4.193427e-04
x_2 x_2 4.068289e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 5.49782  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 9
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.973847e+01
x_1 x_1 1.115309e-01
x_3 x_3 4.478102e-02
x_2 x_2 3.038614e-02
y_4 y_4 2.580611e-02
y_1 y_1 2.138903e-02
y_2 y_2 1.139108e-02
y_3 y_3 8.971965e-03
z_1 z_1 2.804936e-03
z_4 z_4 1.952228e-03
z_3 z_3 1.950943e-03
z_2 z_2 5.633302e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 39.5561  mm^2 | 160 trees | tree position = 8 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.989108e+01
y_1 y_1 9.212271e-02
x_4 x_4 6.333051e-03
x_1 x_1 2.349499e-03
x_2 x_2 1.857513e-03
x_3 x_3 1.812708e-03
y_2 y_2 1.684079e-03
y_3 y_3 1.344884e-03
z_1 z_1 4.942086e-04
z_4 z_4 4.011144e-04
z_3 z_3 2.668930e-04
z_2 z_2 2.550555e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 21.17562  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.969072e+01
z_3 z_3 1.838723e-01
z_2 z_2 1.022718e-01
z_1 z_1 1.042347e-02
x_4 x_4 3.558367e-03
x_1 x_1 1.639975e-03
x_3 x_3 1.524017e-03
y_1 y_1 1.500992e-03
y_4 y_4 1.313132e-03
x_2 x_2 1.262709e-03
y_2 y_2 9.802463e-04
y_3 y_3 9.332538e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 10.07276  mm^2 | 800 trees | tree position = 40 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 10
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.984513e+01
x_1 x_1 1.468333e-01
y_4 y_4 1.435839e-03
y_1 y_1 1.192063e-03
z_2 z_2 1.102855e-03
x_2 x_2 8.691078e-04
z_1 z_1 7.541657e-04
x_3 x_3 6.548119e-04
z_3 z_3 6.272272e-04
y_2 y_2 6.105585e-04
y_3 y_3 5.598811e-04
z_4 z_4 2.300054e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 31.91685  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.984485e+01
y_1 y_1 1.467826e-01
x_4 x_4 1.698719e-03
x_1 x_1 1.263525e-03
y_2 y_2 8.278463e-04
z_1 z_1 8.239525e-04
x_3 x_3 8.064651e-04
x_2 x_2 6.952619e-04
z_2 z_2 6.863387e-04
z_3 z_3 6.839384e-04
y_3 y_3 6.766296e-04
z_4 z_4 2.029529e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 34.00168  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_3 z_3 74.765819168
z_4 z_4 25.161152181
z_2 z_2  0.014389385
z_1 z_1  0.009772672
x_1 x_1  0.007350978
y_1 y_1  0.007011545
y_4 y_4  0.006584498
x_4 x_4  0.006524778
x_2 x_2  0.005958955
y_2 y_2  0.005482974
x_3 x_3  0.005131995
y_3 y_3  0.004820871
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 40.10138  mm^2 | 940 trees | tree position = 47 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
* Done!
*********************************************

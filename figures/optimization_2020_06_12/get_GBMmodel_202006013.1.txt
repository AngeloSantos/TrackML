*********************************************
* Reading training and optimization input files ...
Loading required package: gbm
Loaded gbm 2.1.5
*********************************************
* Training model for layer 5
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.995808e+01
x_1 x_1 2.016301e-02
z_4 z_4 3.784885e-03
y_4 y_4 3.751294e-03
y_1 y_1 3.150863e-03
x_3 x_3 3.119559e-03
x_2 x_2 2.259233e-03
z_1 z_1 1.349235e-03
z_3 z_3 1.280011e-03
z_2 z_2 1.264735e-03
y_2 y_2 9.958175e-04
y_3 y_3 8.045326e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 2.652411  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.996084e+01
y_1 y_1 1.835530e-02
x_4 x_4 3.769730e-03
z_4 z_4 3.757056e-03
y_3 y_3 2.944192e-03
x_1 x_1 2.844794e-03
y_2 y_2 2.419121e-03
z_1 z_1 1.183587e-03
z_3 z_3 1.172602e-03
z_2 z_2 1.036571e-03
x_2 x_2 8.728272e-04
x_3 x_3 7.998990e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 2.2211  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.862521032
z_1 z_1  0.114832567
z_3 z_3  0.004403605
z_2 z_2  0.003690808
x_1 x_1  0.002459952
x_4 x_4  0.002341231
y_1 y_1  0.002096500
y_4 y_4  0.002033041
x_3 x_3  0.001521915
x_2 x_2  0.001465530
y_2 y_2  0.001337506
y_3 y_3  0.001296314
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 3.026542  mm^2 | 980 trees | tree position = 49 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 6
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.994061e+01
x_1 x_1 2.806371e-02
x_3 x_3 1.280075e-02
y_4 y_4 5.299546e-03
y_1 y_1 3.637988e-03
x_2 x_2 1.921699e-03
z_4 z_4 1.694837e-03
z_3 z_3 1.581906e-03
z_1 z_1 1.279047e-03
z_2 z_2 1.129364e-03
y_2 y_2 1.053669e-03
y_3 y_3 9.280376e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 4.834959  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.993993e+01
y_1 y_1 2.604413e-02
y_3 y_3 1.577408e-02
x_4 x_4 5.476362e-03
x_1 x_1 3.607869e-03
z_4 z_4 1.817895e-03
y_2 y_2 1.789019e-03
z_3 z_3 1.504845e-03
z_1 z_1 1.138160e-03
z_2 z_2 1.038523e-03
x_2 x_2 9.438351e-04
x_3 x_3 9.397710e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 3.552603  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.993300e+01
z_1 z_1 3.667414e-02
z_3 z_3 7.640236e-03
z_2 z_2 6.393889e-03
x_4 x_4 2.961462e-03
x_1 x_1 2.825652e-03
y_4 y_4 2.802357e-03
x_3 x_3 1.971193e-03
x_2 x_2 1.933625e-03
y_1 y_1 1.592147e-03
y_2 y_2 1.312656e-03
y_3 y_3 8.894699e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 2.219113  mm^2 | 740 trees | tree position = 37 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 7
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.992477e+01
x_1 x_1 6.150442e-02
y_4 y_4 4.266709e-03
y_1 y_1 1.681989e-03
z_4 z_4 1.462463e-03
x_3 x_3 1.222640e-03
z_1 z_1 1.066210e-03
x_2 x_2 1.063066e-03
z_2 z_2 8.622960e-04
y_3 y_3 7.981173e-04
z_3 z_3 6.541035e-04
y_2 y_2 6.472488e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 8.389002  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.992915e+01
y_1 y_1 5.669892e-02
x_4 x_4 4.083895e-03
x_1 x_1 1.969731e-03
y_3 y_3 1.852579e-03
z_4 z_4 1.355036e-03
z_2 z_2 1.086165e-03
z_1 z_1 9.463528e-04
y_2 y_2 8.146055e-04
x_3 x_3 7.623472e-04
z_3 z_3 6.584049e-04
x_2 x_2 6.231194e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 6.85898  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.957338013
z_1 z_1  0.020862944
z_2 z_2  0.007443737
z_3 z_3  0.003386701
x_4 x_4  0.001909324
x_1 x_1  0.001829771
y_1 y_1  0.001458796
y_4 y_4  0.001399468
x_3 x_3  0.001354509
x_2 x_2  0.001202247
y_3 y_3  0.001101266
y_2 y_2  0.000713224
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 2.557682  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 8
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.990217e+01
x_1 x_1 8.969673e-02
y_4 y_4 2.216105e-03
z_4 z_4 1.083171e-03
y_1 y_1 8.694599e-04
z_1 z_1 8.084887e-04
x_2 x_2 7.820061e-04
x_3 x_3 6.131773e-04
y_3 y_3 4.823922e-04
y_2 y_2 4.556913e-04
z_3 z_3 4.213448e-04
z_2 z_2 3.997028e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 93.90324  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.991024e+01
y_1 y_1 8.078916e-02
x_4 x_4 2.459750e-03
x_1 x_1 1.138151e-03
z_4 z_4 1.002264e-03
z_1 z_1 9.185610e-04
y_3 y_3 7.080015e-04
y_2 y_2 6.798891e-04
x_2 x_2 6.229474e-04
x_3 x_3 6.151717e-04
z_3 z_3 4.441542e-04
z_2 z_2 3.820697e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 54.78476  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.997765e+01
z_1 z_1 1.071674e-02
z_3 z_3 4.996059e-03
x_4 x_4 1.347933e-03
z_2 z_2 1.215591e-03
x_1 x_1 8.276942e-04
y_1 y_1 6.286279e-04
y_4 y_4 6.162217e-04
y_3 y_3 5.616597e-04
x_3 x_3 5.406820e-04
x_2 x_2 5.399812e-04
y_2 y_2 3.549704e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 5.581915  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 9
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.990018e+01
x_1 x_1 9.196653e-02
y_4 y_4 1.685998e-03
y_1 y_1 1.140619e-03
x_2 x_2 9.857729e-04
z_1 z_1 6.618944e-04
y_2 y_2 6.438685e-04
z_4 z_4 6.411164e-04
y_3 y_3 5.789369e-04
x_3 x_3 5.767680e-04
z_3 z_3 5.224894e-04
z_2 z_2 4.198009e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 14.34911  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.990026e+01
y_1 y_1 8.826998e-02
x_4 x_4 2.212462e-03
x_1 x_1 1.598932e-03
y_2 y_2 1.164090e-03
z_1 z_1 1.137740e-03
x_3 x_3 1.130890e-03
z_4 z_4 1.030533e-03
x_2 x_2 9.677643e-04
y_3 y_3 8.138918e-04
z_2 z_2 7.156448e-04
z_3 z_3 6.983118e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 15.88885  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.978846e+01
z_3 z_3 1.999420e-01
z_1 z_1 3.487426e-03
z_2 z_2 1.131949e-03
x_1 x_1 1.126009e-03
y_1 y_1 9.719677e-04
x_4 x_4 9.520818e-04
y_4 y_4 9.141718e-04
y_2 y_2 7.884400e-04
x_2 x_2 7.620164e-04
x_3 x_3 7.402134e-04
y_3 y_3 7.235568e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 9.747615  mm^2 | 960 trees | tree position = 48 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 10
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.984811e+01
x_1 x_1 1.443536e-01
y_4 y_4 1.581899e-03
y_1 y_1 1.200860e-03
x_3 x_3 7.885234e-04
y_3 y_3 7.278548e-04
y_2 y_2 7.083088e-04
x_2 x_2 7.067390e-04
z_1 z_1 6.103767e-04
z_3 z_3 6.016012e-04
z_2 z_2 4.829248e-04
z_4 z_4 1.259334e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 28.25119  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.986433e+01
y_1 y_1 1.287010e-01
x_4 x_4 1.462385e-03
x_1 x_1 1.127294e-03
x_2 x_2 7.085740e-04
y_2 y_2 6.415484e-04
x_3 x_3 6.377188e-04
z_1 z_1 6.358818e-04
y_3 y_3 6.323405e-04
z_3 z_3 5.355102e-04
z_2 z_2 4.069935e-04
z_4 z_4 1.781023e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 36.04939  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_3 z_3 68.674347022
z_4 z_4 31.269151747
z_1 z_1  0.010894879
y_1 y_1  0.006285703
x_1 x_1  0.005934097
x_4 x_4  0.005689708
y_4 y_4  0.005299238
x_3 x_3  0.005106633
y_2 y_2  0.004672824
x_2 x_2  0.004562539
y_3 y_3  0.004347686
z_2 z_2  0.003707925
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 41.34534  mm^2 | 320 trees | tree position = 16 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
* Done!
*********************************************

*********************************************
* Reading training and optimization input files ...
Loading required package: gbm
Loaded gbm 2.1.5
*********************************************
* Training model for layer 5
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.988758e+01
x_1 x_1 3.677062e-02
x_2 x_2 3.647527e-02
x_3 x_3 1.578304e-02
y_1 y_1 8.192855e-03
y_4 y_4 3.869790e-03
z_4 z_4 3.224644e-03
z_1 z_1 2.461443e-03
y_3 y_3 1.774382e-03
z_2 z_2 1.770847e-03
y_2 y_2 1.683647e-03
z_3 z_3 4.155852e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 6.163047  mm^2 | 360 trees | tree position = 18 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.996609e+01
y_1 y_1 1.727583e-02
x_4 x_4 3.856569e-03
z_4 z_4 3.340352e-03
x_1 x_1 2.705866e-03
y_3 y_3 2.203791e-03
y_2 y_2 1.866504e-03
x_2 x_2 7.735319e-04
x_3 x_3 5.974518e-04
z_1 z_1 4.618836e-04
z_2 z_2 4.280239e-04
z_3 z_3 3.997992e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 1.408745  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.986559e+01
z_1 z_1 1.135923e-01
z_2 z_2 5.211320e-03
x_1 x_1 4.929221e-03
z_3 z_3 2.125418e-03
x_4 x_4 1.758105e-03
y_4 y_4 1.498494e-03
y_1 y_1 1.409646e-03
x_3 x_3 1.068185e-03
x_2 x_2 1.064354e-03
y_2 y_2 8.835879e-04
y_3 y_3 8.701291e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 2.697177  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 6
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.993605e+01
x_1 x_1 2.709127e-02
x_3 x_3 2.232119e-02
y_4 y_4 4.875641e-03
y_1 y_1 3.485321e-03
x_2 x_2 1.935854e-03
z_4 z_4 1.410289e-03
z_3 z_3 8.162829e-04
y_2 y_2 7.937063e-04
y_3 y_3 5.771872e-04
z_1 z_1 3.743494e-04
z_2 z_2 2.644323e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 4.177586  mm^2 | 940 trees | tree position = 47 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.994411e+01
y_1 y_1 2.503053e-02
y_3 y_3 1.476448e-02
x_4 x_4 6.382543e-03
x_1 x_1 3.336286e-03
z_4 z_4 1.525227e-03
z_3 z_3 1.082322e-03
x_2 x_2 9.318968e-04
y_2 y_2 8.985089e-04
x_3 x_3 7.794539e-04
z_1 z_1 6.348309e-04
z_2 z_2 5.202287e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 2.228618  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.917303435
z_1 z_1  0.034025772
x_4 x_4  0.018932694
z_3 z_3  0.007510529
y_4 y_4  0.004204653
z_2 z_2  0.004175596
x_3 x_3  0.003893365
x_1 x_1  0.002644037
y_1 y_1  0.002435358
x_2 x_2  0.002002300
y_2 y_2  0.001473081
y_3 y_3  0.001399180
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 1.846941  mm^2 | 980 trees | tree position = 49 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 7
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.993034e+01
x_1 x_1 5.838359e-02
y_4 y_4 4.105412e-03
z_4 z_4 1.407538e-03
y_1 y_1 1.384036e-03
x_2 x_2 8.598349e-04
y_3 y_3 8.498656e-04
x_3 x_3 8.006782e-04
y_2 y_2 5.907992e-04
z_2 z_2 4.758710e-04
z_3 z_3 4.246800e-04
z_1 z_1 3.821871e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 6.100366  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.993216e+01
y_1 y_1 5.725207e-02
x_4 x_4 3.958247e-03
y_3 y_3 1.443744e-03
z_4 z_4 1.348726e-03
x_1 x_1 1.301575e-03
y_2 y_2 5.469629e-04
x_3 x_3 5.254894e-04
x_2 x_2 4.291429e-04
z_3 z_3 4.066150e-04
z_2 z_2 3.386090e-04
z_1 z_1 2.871264e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 4.161316  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.996504e+01
z_1 z_1 1.847191e-02
z_2 z_2 5.067914e-03
x_3 x_3 2.310607e-03
z_3 z_3 1.959696e-03
x_4 x_4 1.482837e-03
x_1 x_1 1.321916e-03
y_4 y_4 1.256067e-03
y_1 y_1 9.523992e-04
y_3 y_3 8.338257e-04
x_2 x_2 7.252024e-04
y_2 y_2 5.771780e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 2.166125  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 8
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.972144e+01
x_1 x_1 1.110117e-01
x_3 x_3 4.570206e-02
y_1 y_1 4.149758e-02
y_3 y_3 2.613210e-02
x_2 x_2 2.191169e-02
y_2 y_2 1.481220e-02
y_4 y_4 1.060562e-02
z_1 z_1 3.963949e-03
z_3 z_3 1.251548e-03
z_4 z_4 1.197809e-03
z_2 z_2 4.745176e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 116.628  mm^2 | 320 trees | tree position = 16 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.990072e+01
y_1 y_1 8.373662e-02
x_4 x_4 3.934757e-03
x_3 x_3 2.645351e-03
x_1 x_1 2.029715e-03
y_3 y_3 1.573045e-03
y_2 y_2 1.520768e-03
z_1 z_1 1.193434e-03
z_4 z_4 1.074803e-03
x_2 x_2 1.054859e-03
z_3 z_3 2.829311e-04
z_2 z_2 2.315890e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 54.13263  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.998315e+01
z_1 z_1 8.098125e-03
z_3 z_3 1.207589e-03
y_1 y_1 1.148324e-03
x_4 x_4 9.909056e-04
x_1 x_1 9.613440e-04
z_2 z_2 9.210630e-04
x_3 x_3 9.125167e-04
x_2 x_2 7.275748e-04
y_2 y_2 7.088268e-04
y_3 y_3 5.947300e-04
y_4 y_4 5.828911e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 5.269894  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 9
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.973738e+01
x_1 x_1 1.249650e-01
y_1 y_1 4.302207e-02
x_3 x_3 3.408108e-02
y_3 y_3 1.825134e-02
x_2 x_2 1.669523e-02
y_2 y_2 1.392521e-02
y_4 y_4 8.687928e-03
z_2 z_2 1.205287e-03
z_4 z_4 7.214123e-04
z_1 z_1 6.985354e-04
z_3 z_3 3.711588e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 24.18275  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.987825e+01
y_1 y_1 9.493516e-02
x_4 x_4 6.694047e-03
x_1 x_1 5.994500e-03
x_3 x_3 3.910206e-03
y_2 y_2 2.827029e-03
y_3 y_3 2.341328e-03
x_2 x_2 2.341237e-03
z_4 z_4 9.345041e-04
z_1 z_1 8.391637e-04
z_3 z_3 5.264205e-04
z_2 z_2 4.043019e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 12.0804  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.888241354
z_3 z_3  0.093191725
z_1 z_1  0.003609497
x_4 x_4  0.002530849
z_2 z_2  0.002403367
x_1 x_1  0.001865861
y_1 y_1  0.001765955
x_3 x_3  0.001414144
y_4 y_4  0.001414135
x_2 x_2  0.001335240
y_3 y_3  0.001125871
y_2 y_2  0.001102003
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 8.757583  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 10
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.984214e+01
x_1 x_1 1.516147e-01
y_4 y_4 1.377768e-03
y_1 y_1 8.590542e-04
x_3 x_3 7.009019e-04
x_2 x_2 6.636152e-04
y_2 y_2 5.872217e-04
y_3 y_3 5.469019e-04
z_2 z_2 5.105334e-04
z_3 z_3 4.399480e-04
z_1 z_1 3.639206e-04
z_4 z_4 1.928276e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 19.89251  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.984032e+01
y_1 y_1 1.538891e-01
x_4 x_4 1.484846e-03
x_1 x_1 8.733326e-04
y_2 y_2 6.533793e-04
y_3 y_3 5.973991e-04
x_3 x_3 4.933323e-04
x_2 x_2 4.610026e-04
z_3 z_3 3.749928e-04
z_2 z_2 3.390496e-04
z_1 z_1 3.112218e-04
z_4 z_4 2.013606e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 23.77495  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_3 z_3 59.580553634
z_4 z_4 40.374292834
z_1 z_1  0.009622890
x_1 x_1  0.004410688
y_1 y_1  0.004409116
y_4 y_4  0.004288286
x_4 x_4  0.004189255
z_2 z_2  0.004105903
y_3 y_3  0.003900302
x_2 x_2  0.003600348
y_2 y_2  0.003477217
x_3 x_3  0.003149528
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE(x) = 29.21972  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
* Done!
*********************************************

*********************************************
* Reading training and optimization input files ...
Loading required package: gbm
Loaded gbm 2.1.5
*********************************************
* Training model for layer 5
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 99.679200066
x_1 x_1  0.078544009
y_1 y_1  0.070797738
x_3 x_3  0.040306786
x_2 x_2  0.032168538
z_1 z_1  0.024779552
y_4 y_4  0.018555627
y_2 y_2  0.015292336
z_2 z_2  0.014086965
z_3 z_3  0.009730110
z_4 z_4  0.009557764
y_3 y_3  0.006980509
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 8.452071  mm^2 | 280 trees | tree position = 14 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 99.947593543
y_1 y_1  0.018668021
x_4 x_4  0.005689443
z_4 z_4  0.005084329
y_3 y_3  0.004433545
z_1 z_1  0.003826526
y_2 y_2  0.003551013
x_1 x_1  0.003296916
z_3 z_3  0.002701963
z_2 z_2  0.002598960
x_3 x_3  0.001332824
x_2 x_2  0.001222917
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 2.019781  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.499154618
z_1 z_1  0.233249440
z_2 z_2  0.075642308
z_3 z_3  0.069056425
x_4 x_4  0.048731352
x_1 x_1  0.018192724
x_3 x_3  0.016357168
y_4 y_4  0.013020688
y_2 y_2  0.010872607
x_2 x_2  0.006907303
y_1 y_1  0.005229496
y_3 y_3  0.003585870
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 2.022977  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 6
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 99.738110811
x_3 x_3  0.126857597
x_1 x_1  0.049202979
y_4 y_4  0.022176915
x_2 x_2  0.018808867
y_1 y_1  0.014584853
y_3 y_3  0.009468822
z_1 z_1  0.008801523
y_2 y_2  0.005569768
z_3 z_3  0.003012235
z_2 z_2  0.001883236
z_4 z_4  0.001522395
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 15.63558  mm^2 | 240 trees | tree position = 12 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.993473e+01
y_1 y_1 2.613717e-02
y_3 y_3 1.846105e-02
x_4 x_4 5.540297e-03
x_1 x_1 3.793622e-03
x_3 x_3 3.152277e-03
y_2 y_2 1.999246e-03
z_4 z_4 1.839743e-03
z_3 z_3 1.363691e-03
x_2 x_2 1.359342e-03
z_1 z_1 9.055073e-04
z_2 z_2 7.141584e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 3.775621  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.802897703
z_1 z_1  0.067404455
x_3 x_3  0.032519610
z_3 z_3  0.030643031
z_2 z_2  0.030446183
y_1 y_1  0.006095723
y_4 y_4  0.006049795
x_4 x_4  0.005876337
x_1 x_1  0.005747748
x_2 x_2  0.005382175
y_3 y_3  0.004561784
y_2 y_2  0.002375456
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 3.21019  mm^2 | 840 trees | tree position = 42 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 7
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.992595e+01
x_1 x_1 5.952736e-02
y_4 y_4 4.647064e-03
y_1 y_1 1.998241e-03
z_4 z_4 1.502318e-03
x_3 x_3 1.126351e-03
x_2 x_2 1.074669e-03
z_1 z_1 1.017812e-03
z_2 z_2 9.617831e-04
y_3 y_3 7.854915e-04
z_3 z_3 7.035791e-04
y_2 y_2 7.010928e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 10.59764  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.992450e+01
y_1 y_1 5.962634e-02
x_4 x_4 4.524865e-03
y_3 y_3 2.129236e-03
x_1 x_1 1.992815e-03
z_4 z_4 1.848373e-03
z_1 z_1 1.227265e-03
z_2 z_2 9.618993e-04
x_3 x_3 9.225901e-04
y_2 y_2 8.448467e-04
x_2 x_2 7.960894e-04
z_3 z_3 6.251517e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 6.983315  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.860130962
z_1 z_1  0.047135577
z_3 z_3  0.038083238
z_2 z_2  0.025159273
x_2 x_2  0.009311305
x_1 x_1  0.003929948
y_1 y_1  0.003736548
x_4 x_4  0.003455920
x_3 x_3  0.003327466
y_2 y_2  0.002759748
y_4 y_4  0.001634478
y_3 y_3  0.001335538
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 25.24819  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 8
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.983103e+01
x_1 x_1 1.081031e-01
y_1 y_1 1.812898e-02
x_3 x_3 1.355672e-02
y_3 y_3 1.090531e-02
x_2 x_2 6.291168e-03
y_2 y_2 6.150352e-03
y_4 y_4 3.551904e-03
z_2 z_2 7.224577e-04
z_4 z_4 6.891078e-04
z_1 z_1 6.127272e-04
z_3 z_3 2.630698e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 602.6053  mm^2 | 860 trees | tree position = 43 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.989246e+01
y_1 y_1 8.983047e-02
x_4 x_4 6.272934e-03
x_1 x_1 2.853686e-03
z_1 z_1 1.498067e-03
x_3 x_3 1.458739e-03
x_2 x_2 1.194584e-03
y_3 y_3 1.181568e-03
y_2 y_2 1.014941e-03
z_4 z_4 9.455127e-04
z_2 z_2 6.544890e-04
z_3 z_3 6.335526e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 19.80531  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.946539040
z_1 z_1  0.023628202
z_2 z_2  0.008304027
z_3 z_3  0.005552972
x_1 x_1  0.003033139
x_2 x_2  0.002356020
x_4 x_4  0.002243318
y_1 y_1  0.002220751
x_3 x_3  0.002218115
y_4 y_4  0.001470138
y_3 y_3  0.001247721
y_2 y_2  0.001186558
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 24.12461  mm^2 | 980 trees | tree position = 49 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 9
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.990501e+01
x_1 x_1 8.811864e-02
y_4 y_4 1.687636e-03
y_1 y_1 1.072830e-03
x_2 x_2 7.314276e-04
z_4 z_4 6.785887e-04
x_3 x_3 5.387597e-04
y_3 y_3 5.184886e-04
y_2 y_2 4.735913e-04
z_1 z_1 4.524432e-04
z_3 z_3 4.153874e-04
z_2 z_2 3.019689e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 15.41161  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.989761e+01
y_1 y_1 9.506828e-02
x_4 x_4 1.702027e-03
x_1 x_1 1.108176e-03
y_2 y_2 8.572255e-04
z_4 z_4 6.654849e-04
x_2 x_2 6.196138e-04
x_3 x_3 5.614756e-04
y_3 y_3 5.184173e-04
z_1 z_1 4.713761e-04
z_3 z_3 4.682618e-04
z_2 z_2 3.482476e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 12.49841  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.994425e+01
z_3 z_3 4.241331e-02
z_1 z_1 1.092779e-02
z_2 z_2 2.378936e-03
x_3 x_3 1.119714e-05
y_2 y_2 6.936793e-06
x_1 x_1 4.351246e-06
x_2 x_2 3.551674e-06
x_4 x_4 2.453566e-06
y_3 y_3 2.234185e-06
y_4 y_4 1.425770e-06
y_1 y_1 1.030631e-06
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 92.64639  mm^2 | 380 trees | tree position = 19 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 10
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.984488e+01
x_1 x_1 1.469163e-01
y_4 y_4 1.718515e-03
y_1 y_1 1.201561e-03
x_2 x_2 7.941110e-04
z_1 z_1 7.795618e-04
x_3 x_3 7.347737e-04
y_2 y_2 7.282725e-04
y_3 y_3 7.095218e-04
z_2 z_2 6.749338e-04
z_3 z_3 6.385820e-04
z_4 z_4 2.218611e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 32.39287  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.983575e+01
y_1 y_1 1.569636e-01
x_4 x_4 1.521809e-03
x_1 x_1 1.067814e-03
z_1 z_1 8.438819e-04
y_2 y_2 6.544222e-04
z_2 z_2 6.273027e-04
z_3 z_3 6.103380e-04
x_3 x_3 6.091424e-04
y_3 y_3 5.974396e-04
x_2 x_2 5.686448e-04
z_4 z_4 1.808383e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 24.33287  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 83.271405323
z_3 z_3 16.574319858
z_1 z_1  0.068953585
z_2 z_2  0.040882383
y_1 y_1  0.006982621
x_1 x_1  0.006690992
x_4 x_4  0.005877550
y_4 y_4  0.005555791
x_3 x_3  0.005163949
y_3 y_3  0.004893992
y_2 y_2  0.004851959
x_2 x_2  0.004421995
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 61.93853  mm^2 | 80 trees | tree position = 4 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
* Done!
*********************************************

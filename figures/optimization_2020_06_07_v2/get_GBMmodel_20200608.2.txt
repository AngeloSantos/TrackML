*********************************************
* Reading training and optimization input files ...
Loading required package: gbm
Loaded gbm 2.1.5
*********************************************
* Training model for layer 5
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.621470e+01
x_3 x_3 3.743724e+00
x_1 x_1 1.863524e-02
z_3 z_3 5.910691e-03
y_4 y_4 4.315454e-03
z_4 z_4 3.984270e-03
y_1 y_1 3.044938e-03
x_2 x_2 1.968517e-03
z_2 z_2 1.697357e-03
y_2 y_2 8.659179e-04
z_1 z_1 6.332088e-04
y_3 y_3 5.252416e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 3.620605  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 84.159285435
y_3 y_3 15.775830318
y_1 y_1  0.023653063
z_3 z_3  0.015790982
z_4 z_4  0.006764141
x_4 x_4  0.004417022
y_2 y_2  0.004380034
x_1 x_1  0.003452675
z_2 z_2  0.002554374
z_1 z_1  0.001672059
x_2 x_2  0.001193379
x_3 x_3  0.001006517
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 2.998277  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 6.899477e+01
z_3 z_3 3.037731e+01
y_4 y_4 2.156747e-01
y_1 y_1 1.740620e-01
z_1 z_1 1.497251e-01
z_2 z_2 8.047905e-02
x_1 x_1 2.628206e-03
x_2 x_2 1.531085e-03
x_4 x_4 1.247988e-03
x_3 x_3 1.047092e-03
y_2 y_2 7.815615e-04
y_3 y_3 7.357766e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 4.015715  mm^2 | 140 trees | tree position = 7 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 6
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.992365e+01
x_1 x_1 2.570716e-02
x_3 x_3 2.252373e-02
y_4 y_4 5.056063e-03
z_2 z_2 4.579468e-03
z_1 z_1 4.364733e-03
z_4 z_4 4.328281e-03
y_1 y_1 3.497774e-03
z_3 z_3 2.819345e-03
x_2 x_2 2.150703e-03
y_2 y_2 6.694420e-04
y_3 y_3 6.577154e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 10.77534  mm^2 | 680 trees | tree position = 34 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.937660e+01
y_3 y_3 5.722878e-01
y_1 y_1 2.760358e-02
x_4 x_4 5.045364e-03
z_2 z_2 3.305354e-03
z_4 z_4 3.270262e-03
x_1 x_1 3.248631e-03
y_2 y_2 3.033139e-03
z_3 z_3 2.881220e-03
x_2 x_2 1.029049e-03
z_1 z_1 8.516450e-04
x_3 x_3 8.444899e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 3.264904  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 98.882469872
z_2 z_2  0.540373247
y_3 y_3  0.231764428
z_3 z_3  0.198426415
z_1 z_1  0.126881233
y_1 y_1  0.007515452
x_4 x_4  0.003208930
y_4 y_4  0.002887957
x_1 x_1  0.002325667
x_3 x_3  0.001754235
x_2 x_2  0.001200595
y_2 y_2  0.001191969
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 4.442103  mm^2 | 140 trees | tree position = 7 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 7
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 99.892330313
x_1 x_1  0.056234360
z_1 z_1  0.009084001
x_2 x_2  0.008739645
y_2 y_2  0.006909989
z_4 z_4  0.006428571
z_3 z_3  0.005276099
z_2 z_2  0.005160502
y_4 y_4  0.004431423
y_1 y_1  0.002141823
x_3 x_3  0.001812973
y_3 y_3  0.001450302
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 16.49215  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.987372e+01
y_1 y_1 6.450235e-02
y_2 y_2 2.075471e-02
z_1 z_1 9.086589e-03
z_2 z_2 7.246176e-03
z_4 z_4 6.176100e-03
z_3 z_3 6.170125e-03
y_3 y_3 4.864822e-03
x_4 x_4 4.231944e-03
x_1 x_1 1.716512e-03
x_3 x_3 8.796636e-04
x_2 x_2 6.540518e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 6.726026  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.806491455
z_1 z_1  0.089425073
z_2 z_2  0.045647600
z_3 z_3  0.040550875
y_2 y_2  0.004810773
x_3 x_3  0.002956589
y_1 y_1  0.002026110
y_4 y_4  0.002001547
x_4 x_4  0.001832329
x_1 x_1  0.001770121
y_3 y_3  0.001282221
x_2 x_2  0.001205308
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 31.81762  mm^2 | 100 trees | tree position = 5 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 8
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.990132e+01
x_1 x_1 8.442127e-02
z_4 z_4 2.808290e-03
y_4 y_4 2.391543e-03
z_2 z_2 2.260484e-03
z_3 z_3 2.050593e-03
z_1 z_1 1.329992e-03
y_1 y_1 8.962031e-04
x_2 x_2 8.190416e-04
x_3 x_3 6.147887e-04
y_3 y_3 6.107678e-04
y_2 y_2 4.770598e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 594.6758  mm^2 | 820 trees | tree position = 41 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.989735e+01
y_1 y_1 8.896092e-02
x_4 x_4 2.432231e-03
z_4 z_4 2.343775e-03
z_2 z_2 2.039413e-03
z_3 z_3 1.760826e-03
z_1 z_1 1.358393e-03
y_2 y_2 1.081585e-03
x_1 x_1 9.840684e-04
y_3 y_3 6.355597e-04
x_3 x_3 5.407647e-04
x_2 x_2 5.129976e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 19.00083  mm^2 | 980 trees | tree position = 49 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.894991550
z_1 z_1  0.034325869
z_2 z_2  0.031850047
z_3 z_3  0.025082106
x_1 x_1  0.002347665
y_1 y_1  0.002267022
x_2 x_2  0.001939126
x_4 x_4  0.001861585
x_3 x_3  0.001681944
y_4 y_4  0.001431076
y_2 y_2  0.001254440
y_3 y_3  0.000967569
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 26.36586  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 9
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.987307e+01
x_1 x_1 9.380701e-02
z_1 z_1 7.580280e-03
z_4 z_4 6.704827e-03
z_2 z_2 6.395708e-03
z_3 z_3 4.402714e-03
x_3 x_3 3.374846e-03
y_4 y_4 1.730759e-03
y_1 y_1 9.907245e-04
x_2 x_2 7.456252e-04
y_3 y_3 6.741711e-04
y_2 y_2 5.276473e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 15.59139  mm^2 | 980 trees | tree position = 49 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.981861e+01
y_1 y_1 9.334155e-02
z_1 z_1 2.132725e-02
z_4 z_4 2.068341e-02
z_2 z_2 2.052329e-02
z_3 z_3 1.341091e-02
y_3 y_3 6.416824e-03
y_2 y_2 2.196480e-03
x_4 x_4 1.549328e-03
x_1 x_1 1.034028e-03
x_3 x_3 4.624854e-04
x_2 x_2 4.466547e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 14.20537  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var     rel.inf
z_4 z_4 99.81761971
z_3 z_3  0.08514981
z_1 z_1  0.04222193
z_2 z_2  0.03454260
y_4 y_4  0.01040078
y_3 y_3  0.01006517
x_1 x_1  0.00000000
x_2 x_2  0.00000000
x_3 x_3  0.00000000
x_4 x_4  0.00000000
y_1 y_1  0.00000000
y_2 y_2  0.00000000
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 92.84967  mm^2 | 460 trees | tree position = 23 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 10
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.981759e+01
x_1 x_1 1.570001e-01
x_3 x_3 6.102230e-03
z_3 z_3 5.177424e-03
z_1 z_1 4.295146e-03
z_2 z_2 3.349223e-03
y_4 y_4 1.447428e-03
y_2 y_2 1.226364e-03
y_3 y_3 1.180324e-03
x_2 x_2 1.130931e-03
y_1 y_1 9.955853e-04
z_4 z_4 5.097185e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 35.91288  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.983439e+01
y_1 y_1 1.342867e-01
y_3 y_3 9.314740e-03
y_2 y_2 7.735093e-03
z_3 z_3 4.439195e-03
z_1 z_1 3.693528e-03
z_2 z_2 2.518411e-03
x_4 x_4 1.476164e-03
x_1 x_1 9.345002e-04
x_2 x_2 5.423234e-04
x_3 x_3 5.006438e-04
z_4 z_4 1.652843e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 24.72441  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 88.044934050
z_3 z_3 11.842863425
z_1 z_1  0.034783883
z_2 z_2  0.017937186
y_3 y_3  0.012516129
y_2 y_2  0.010127636
x_1 x_1  0.006645851
y_4 y_4  0.006588640
x_4 x_4  0.006568435
y_1 y_1  0.006306139
x_2 x_2  0.005655899
x_3 x_3  0.005072726
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 57.16452  mm^2 | 20 trees | tree position = 1 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
* Done!
*********************************************

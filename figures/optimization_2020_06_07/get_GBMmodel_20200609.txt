*********************************************
* Reading training and optimization input files ...
Loading required package: gbm
Loaded gbm 2.1.5
*********************************************
* Training model for layer 5
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 99.853945143
x_1 x_1  0.048953296
x_3 x_3  0.026327704
y_4 y_4  0.022493326
y_1 y_1  0.014856294
z_4 z_4  0.006912078
z_3 z_3  0.005792950
y_3 y_3  0.005389974
x_2 x_2  0.005274988
y_2 y_2  0.005078424
z_2 z_2  0.003432432
z_1 z_1  0.001543389
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 6.595049  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.329197e+01
y_3 y_3 6.639096e+00
y_1 y_1 1.999075e-02
z_3 z_3 1.707225e-02
z_4 z_4 1.169919e-02
x_4 x_4 4.845622e-03
x_1 x_1 3.462716e-03
z_2 z_2 3.175546e-03
y_2 y_2 3.072139e-03
z_1 z_1 3.033570e-03
x_2 x_2 1.599753e-03
x_3 x_3 9.837173e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 2.590392  mm^2 | 980 trees | tree position = 49 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.842220e+01
z_3 z_3 1.257145e+00
z_1 z_1 1.213299e-01
y_4 y_4 1.075808e-01
z_2 z_2 5.939256e-02
y_1 y_1 1.737085e-02
x_4 x_4 7.668078e-03
x_1 x_1 2.721280e-03
x_3 x_3 2.303029e-03
x_2 x_2 1.425638e-03
y_2 y_2 4.956139e-04
y_3 y_3 3.714275e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 4.321472  mm^2 | 260 trees | tree position = 13 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 6
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 99.827829624
x_3 x_3  0.072876226
x_1 x_1  0.032987644
y_1 y_1  0.015413334
y_4 y_4  0.014233742
x_2 x_2  0.013691205
y_3 y_3  0.005130879
y_2 y_2  0.004877852
z_4 z_4  0.003780028
z_2 z_2  0.003495888
z_1 z_1  0.003099881
z_3 z_3  0.002583696
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 16.99391  mm^2 | 100 trees | tree position = 5 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.993556e+01
y_1 y_1 2.588004e-02
y_3 y_3 1.728872e-02
x_4 x_4 5.773565e-03
x_1 x_1 3.473160e-03
z_4 z_4 2.742454e-03
y_2 y_2 2.226616e-03
z_2 z_2 1.959497e-03
z_3 z_3 1.675913e-03
x_3 x_3 1.528914e-03
x_2 x_2 1.271963e-03
z_1 z_1 6.198669e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 2.780161  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.272695524
z_2 z_2  0.310573246
z_3 z_3  0.158812815
y_3 y_3  0.112914277
z_1 z_1  0.112312614
x_3 x_3  0.009933988
y_1 y_1  0.005012966
x_4 x_4  0.004388185
y_4 y_4  0.004308171
x_2 x_2  0.003775534
x_1 x_1  0.003634054
y_2 y_2  0.001638627
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 3.284657  mm^2 | 60 trees | tree position = 3 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 7
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.992620e+01
x_1 x_1 5.743225e-02
y_4 y_4 2.914297e-03
x_2 x_2 2.878568e-03
z_1 z_1 2.841726e-03
z_4 z_4 2.008165e-03
z_3 z_3 1.729831e-03
y_2 y_2 1.459934e-03
z_2 z_2 1.012715e-03
y_1 y_1 7.125951e-04
x_3 x_3 6.257685e-04
y_3 y_3 1.850523e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 17.03647  mm^2 | 960 trees | tree position = 48 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 99.902876956
y_1 y_1  0.063518320
y_2 y_2  0.010045308
z_1 z_1  0.004812427
z_4 z_4  0.004601634
x_4 x_4  0.003926549
z_2 z_2  0.002778501
y_3 y_3  0.002648590
z_3 z_3  0.002339709
x_1 x_1  0.001400822
x_3 x_3  0.000526894
x_2 x_2  0.000524288
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 5.756863  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.986805e+01
z_1 z_1 6.005473e-02
z_2 z_2 2.916359e-02
z_3 z_3 2.614463e-02
x_4 x_4 2.644440e-03
x_2 x_2 2.591267e-03
x_3 x_3 2.368622e-03
y_2 y_2 2.247018e-03
x_1 x_1 2.160043e-03
y_1 y_1 1.886653e-03
y_4 y_4 1.753028e-03
y_3 y_3 9.313492e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 31.64392  mm^2 | 60 trees | tree position = 3 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 8
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.983798e+01
x_1 x_1 9.743758e-02
x_3 x_3 2.419941e-02
y_1 y_1 1.729967e-02
y_4 y_4 5.481778e-03
y_3 y_3 5.287255e-03
x_2 x_2 3.784552e-03
z_2 z_2 2.347358e-03
y_2 y_2 2.045986e-03
z_4 z_4 1.663717e-03
z_1 z_1 1.597020e-03
z_3 z_3 8.792886e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 596.7668  mm^2 | 460 trees | tree position = 23 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.989970e+01
y_1 y_1 8.799784e-02
x_4 x_4 3.727517e-03
z_4 z_4 1.401034e-03
z_2 z_2 1.316960e-03
z_1 z_1 1.239850e-03
x_1 x_1 1.111587e-03
z_3 z_3 8.443452e-04
y_2 y_2 8.364515e-04
x_3 x_3 8.219410e-04
y_3 y_3 5.263961e-04
x_2 x_2 4.765363e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 18.1688  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 9.991466e+01
z_1 z_1 3.365631e-02
z_2 z_2 2.563885e-02
z_3 z_3 1.682680e-02
x_1 x_1 1.900416e-03
y_1 y_1 1.633764e-03
x_4 x_4 1.153710e-03
y_2 y_2 1.035605e-03
x_2 x_2 1.020751e-03
x_3 x_3 9.192392e-04
y_4 y_4 8.937764e-04
y_3 y_3 6.581353e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 25.72934  mm^2 | 960 trees | tree position = 48 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 9
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.989135e+01
x_1 x_1 9.353771e-02
z_1 z_1 2.827748e-03
z_3 z_3 2.778229e-03
z_2 z_2 2.516601e-03
z_4 z_4 2.322561e-03
x_3 x_3 1.659202e-03
y_4 y_4 1.340457e-03
y_1 y_1 6.317883e-04
x_2 x_2 5.236437e-04
y_3 y_3 2.810883e-04
y_2 y_2 2.278864e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 12.92721  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.984839e+01
y_1 y_1 9.403478e-02
z_1 z_1 1.406868e-02
z_2 z_2 1.298233e-02
z_3 z_3 1.174407e-02
z_4 z_4 1.168210e-02
y_3 y_3 3.014296e-03
x_4 x_4 1.442920e-03
y_2 y_2 1.224185e-03
x_1 x_1 7.566986e-04
x_3 x_3 3.380436e-04
x_2 x_2 3.216737e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 11.16296  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 99.903607231
z_3 z_3  0.038961091
z_1 z_1  0.032899337
z_2 z_2  0.014526388
y_3 y_3  0.005239691
y_4 y_4  0.004766262
x_1 x_1  0.000000000
x_2 x_2  0.000000000
x_3 x_3  0.000000000
x_4 x_4  0.000000000
y_1 y_1  0.000000000
y_2 y_2  0.000000000
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 92.29126  mm^2 | 500 trees | tree position = 25 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
*********************************************
* Training model for layer 10
  ---------------------------------------------
  ---------------------------------------------
  * Training over x ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
x_4 x_4 9.983241e+01
x_1 x_1 1.462173e-01
z_3 z_3 4.961769e-03
z_1 z_1 4.507768e-03
z_2 z_2 3.945584e-03
y_4 y_4 1.934971e-03
y_1 y_1 1.242829e-03
y_2 y_2 1.166606e-03
y_3 y_3 1.140170e-03
x_2 x_2 1.101362e-03
x_3 x_3 1.020283e-03
z_4 z_4 3.495006e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( x ) = 28.39076  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over y ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
y_4 y_4 9.982599e+01
y_1 y_1 1.529124e-01
y_3 y_3 4.803349e-03
y_2 y_2 4.057211e-03
z_1 z_1 3.355212e-03
z_2 z_2 2.859991e-03
z_3 z_3 1.884284e-03
x_4 x_4 1.703059e-03
x_1 x_1 9.795589e-04
x_2 x_2 5.726265e-04
x_3 x_3 5.628626e-04
z_4 z_4 3.182253e-04
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( y ) = 19.48288  mm^2 | 1000 trees | tree position = 50 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
  ---------------------------------------------
  ---------------------------------------------
  * Training over z ...
    ---------------------------------------------
    * Relative importance of each input variable:
    var      rel.inf
z_4 z_4 82.361425413
z_3 z_3 17.499368643
z_1 z_1  0.059928449
z_2 z_2  0.040260708
y_2 y_2  0.005844212
y_3 y_3  0.005789897
y_1 y_1  0.005674385
x_1 x_1  0.004989138
y_4 y_4  0.004835521
x_4 x_4  0.004624905
x_3 x_3  0.003635630
x_2 x_2  0.003623098
    ---------------------------------------------
    * Predicting 5th hit ...
    * Minimum MSE( z ) = 57.65734  mm^2 | 20 trees | tree position = 1 
    ---------------------------------------------
    * Saving image of MSE vs. Number of Trees ...
    ---------------------------------------------
    * Saving image of Real vs. Predicted Values ...
* Done!
*********************************************
